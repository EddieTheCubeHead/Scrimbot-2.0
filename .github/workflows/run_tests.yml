name: Run tests

on:
  push:
  pull_request:
    branches:
      - master

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest behave
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Create files
      env: # Set the secret as an input
        BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
      run: |
        mkdir DataFiles
        echo "{\"token\": \"$BOT_TOKEN\"}" > Src/Configs/secrets.json
        
    - name: Acceptance tests with behave
      run: |
        behave Test/AcceptanceTest --junit
      env:
        PYTHONPATH: /home/runner/work/Scrimbot-2.0/Scrimbot-2.0/Src/
        
    - name: Test Report
      uses: dorny/test-reporter@v1
      if: always()    # run this step even if previous step failed
      with:
        name: Behave test results
        path: reports/*.xml
        reporter: java-junit
        fail-on-error: 'false'
      id: create_report
        
    - name: Discord Embed
      env:
        DISCORD_WEBHOOK: ${{ secrets.WEBHOOK_URL }}
        DISCORD_EMBEDS: ${{format(
                          "{'embeds':[{'title':'Test run result{0} {1}', 'description'{0}'✅Passed{0} {2}\n⛔Failed{0} {3}\n⌛Skipped{0} {4}\n⏱Running time{0} {5}'}]}",
                          ":",
                          ${{steps.create_report.outputs.conclusion.description}},
                          ${{steps.create_report.outputs.passed.description}},
                          ${{steps.create_report.outputs.failed.description}},
                          ${{steps.create_report.outputs.skipped.description}},
                          ${{steps.create_report.outputs.time.description}}
                        ) }}
      uses: Ilshidur/action-discord@master
      if: always()
